apiVersion: apps/v1  # API Version yang digunakan
kind: StatefulSet    # Membuat object jenis StatefulSet
metadata:
  name: mongo        # menambahkan metadata nama
  labels:
    app: mongo       # menambahkan metadata label
spec:
  replicas: 1        # replika satu pod
  selector:
    matchLabels:
      app: mongo     # samakan dengan label
      tier: backend  # samakan dengan backend
  serviceName: mongo # service yang digunakan
  template:            #template metadata
    metadata:
      labels:
        app: mongo     # label
        tier: backend  # label
    spec:
      containers:
        - image: mongo:3  # menggunakan image mongo:3
          name: mongo   # nama
          env:          # mengatur environment MONGO_INITDB_ROOT_USERNAME & PASSWORD
            - name: MONGO_INITDB_ROOT_USERNAME_FILE
              value: /etc/mongo-credentials/MONGO_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD_FILE
              value: /etc/mongo-credentials/MONGO_ROOT_PASSWORD
          ports:        # ekspose port mongo
            - containerPort: 27017
              name: mongo
          volumeMounts: #mouting dengan PS, Configmap & secret
            - name: mongo-persistent-storage
              mountPath: /data/db
            - name: mongo-config-map
              mountPath: /config
            - name: mongo-credential
              mountPath: /etc/mongo-credentials     
      volumes:
        - name: mongo-persistent-storage      # nama
          persistentVolumeClaim:              # melakukan pvc
            claimName: mongo-pv-claim         # nama pvc
        - name: mongo-config-map
          configMap:
            name: mongo-config	       # nama configmap
            items:                     # data configmap
              - key: mongo.conf
                path: mongo.conf
        - name: mongo-credential
          secret:
            secretName: mongo-credential
